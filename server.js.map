{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./server/Schema/index.js","webpack:///./server/Schema/post.js","webpack:///./server/Schema/user.js","webpack:///./server/index.js","webpack:///./server/models/index.js","webpack:///./server/models/post.js","webpack:///./server/models/user.js","webpack:///./server/resolvers/authorization.js","webpack:///./server/resolvers/index.js","webpack:///./server/resolvers/post.js","webpack:///./server/resolvers/user.js","webpack:///./server/subscription/index.js","webpack:///./server/subscription/post.js","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link-http\"","webpack:///external \"apollo-server\"","webpack:///external \"apollo-server-express\"","webpack:///external \"axios\"","webpack:///external \"babel-polyfill\"","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"cors\"","webpack:///external \"dataloader\"","webpack:///external \"dotenv/config\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"generate-password\"","webpack:///external \"graphql-resolvers\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose\"","webpack:///external \"path\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-dom/server\"","webpack:///external \"react-helmet\"","webpack:///external \"react-router-dom\""],"names":["linkSchema","gql","userSchema","postSchema","http","https","fs","mongoose","connect","process","env","DB_CONNECTION_STRING","useNewUrlParser","then","console","log","catch","err","PORT","configurations","production","ssl","port","hostname","development","environment","config","app","use","origin","webConfig","siteURL","credentials","bodyParser","json","urlencoded","extended","express","static","getMe","req","token","cookies","jwt","verify","JWT_SECRET","AuthenticationError","apollo","ApolloServer","typeDefs","schema","resolvers","formatError","message","error","replace","context","connection","models","me","secret","applyMiddleware","path","server","createServer","key","readFileSync","cert","installSubscriptionHandlers","listen","graphqlPath","User","Post","Schema","title","type","String","required","desc","content","cotagory","img","date","Date","default","now","userId","Types","ObjectId","user","ref","model","username","unique","firstName","lastName","password","email","userImage","bio","role","createdAt","users","pre","isModified","next","bcrypt","genSalt","salt","hash","userModel","newUser","findOne","isAuthenticated","parent","args","skip","ForbiddenError","isAdmin","isPostOwner","parents","id","findById","lean","post","userResolvers","postResolvers","toCursorHash","Buffer","from","string","toString","fromCursorHash","Query","posts","cursor","limit","cursorOptions","$lte","find","sort","hasNextPage","length","edges","slice","pageInfo","endCursor","Mutation","createPost","save","pubsub","publish","EVENTS","POST","CREATED","postCreated","deletePost","findByIdAndDelete","Subscription","subscribe","asyncIterator","createToken","expiresIn","sign","generatePasswordHash","saltRound","hashSync","validatePassword","compare","signUp","UserInputError","signIn","isValidPass","updateUser","findOneAndUpdate","$set","new","deleteUser","setUserImage","changeEmail","currentEmail","newEmail","changePassword","hashPassword","passwordReset","generatedPassword","generator","generate","numbers","data","axios","response","POST_EVENTS","PubSub"],"mappings":"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AAAA;AAAA;AADE;AAhIK,C;;;;;;;;;;;;;;;;;;;ACzBf;;AAEA;;IAAYuE,W;;;;AAEL,IAAMxC,0BAAS;AAClBC,UAAMuC;AADY,CAAf;;kBAIQ,IAAIC,oBAAJ,E;;;;;;;;;;;;;;;;;ACRR,IAAMvC,4BAAU,SAAhB,C;;;;;;;;;;;;;;;;;;;;;;ACAP,kD;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,6C","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./server/index.js\");\n","import { gql } from \"apollo-server-express\";\r\n\r\nimport userSchema from \"./user\";\r\nimport postSchema from \"./post\";\r\n\r\nconst linkSchema = gql`\r\n  type Query {\r\n    _: Boolean\r\n  }\r\n\r\n  type Mutation {\r\n    _: Boolean\r\n  }\r\n\r\n  type Subscription {\r\n    _: Boolean\r\n  }\r\n`;\r\n\r\nexport default [linkSchema, userSchema, postSchema];","import { gql } from \"apollo-server-express\";\r\n\r\nexport default gql`\r\n    extend type Query {\r\n        post(id: ID!): Post!\r\n        posts(cursor: String, limit: Int): PostConnection!\r\n    }\r\n\r\n    extend type Mutation {\r\n        createPost(title: String!, desc: String!, content: String!, cotagory: String!, img: String!): Post!\r\n        deletePost(id: ID!): Boolean!\r\n    }\r\n\r\n    type PostConnection {\r\n        edges: [Post!]!\r\n        pageInfo: PageInfo!\r\n    }\r\n\r\n    type PageInfo {\r\n        hasNextPage: Boolean!\r\n        endCursor: String!\r\n    }\r\n\r\n    type Post {\r\n        _id: ID!\r\n        title: String!\r\n        desc: String!\r\n        content: String!\r\n        cotagory: String!\r\n        img: String!\r\n        date: String!\r\n        user: User!\r\n    }\r\n\r\n    extend type Subscription {\r\n        postCreated: PostCreated!\r\n    }\r\n\r\n    type PostCreated {\r\n        post: Post!\r\n    }\r\n`;","import { gql } from \"apollo-server-express\";\r\n\r\nexport default gql`\r\n    extend type Query {\r\n        me: User\r\n        user(id: ID!): User\r\n        users: [User!]\r\n    }\r\n\r\n    extend type Mutation {\r\n        signUp(\r\n            username: String!\r\n            email: String!\r\n            password: String!\r\n            firstName: String! \r\n            lastName: String!\r\n            profileImage: String\r\n        ): Token!\r\n        signIn(email: String!, password: String!): Token!\r\n        updateUser(email: String!, username: String!, firstName: String!, lastName: String!): User!\r\n        deleteUser(id: ID!): Boolean!\r\n        setUserImage(email: String!, userImage: String!): User!\r\n        changeEmail(currentEmail: String!, newEmail: String!): User!\r\n        changePassword(email: String!, password: String!): User!\r\n        passwordReset(email: String!): User! \r\n    }\r\n\r\n    type Token {\r\n        token: String!\r\n    }\r\n\r\n    type User {\r\n        _id: ID!\r\n        username: String!\r\n        password: String!\r\n        email: String!\r\n        firstName: String! \r\n        lastName: String!\r\n        bio: String\r\n        userImage: String\r\n        rol: String\r\n        createdAt: String!\r\n        posts: [Post!]\r\n    }\r\n`;","import 'babel-polyfill';\r\nimport 'dotenv/config';\r\nimport path from \"path\";\r\nimport * as http from \"http\";\r\nimport * as https from \"https\";\r\nimport * as fs from \"fs\";\r\nimport cors from \"cors\";\r\nimport bodyParser from \"body-parser\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport express from \"express\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport React from \"react\";\r\nimport { renderToString, renderToStaticMarkup } from \"react-dom/server\";\r\nimport { StaticRouter, matchPath } from \"react-router-dom\";\r\nimport { ApolloServer } from 'apollo-server-express';\r\nimport { AuthenticationError } from 'apollo-server';\r\nimport { ApolloProvider, getDataFromTree } from 'react-apollo';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport mongoose from 'mongoose';\r\nimport { Helmet } from 'react-helmet';\r\nimport DataLoader from \"dataloader\";\r\nimport webConfig from \"../webConfig\";\r\n\r\nimport schema from \"./Schema\";\r\nimport resolvers from \"./resolvers\";\r\nimport models from \"./models\";\r\n\r\nmongoose.connect(process.env.DB_CONNECTION_STRING, {useNewUrlParser: true}).then(() => {\r\n    console.log(\"Connection to Database Successfull!\");\r\n}).catch((err) => {\r\n    console.log(\"Connection to Database Error\", err);\r\n});\r\n\r\nconst PORT = process.env.PORT || 5000;\r\nconst configurations = {\r\n    production: {ssl: true, port: PORT, hostname: 'whatever.com'},\r\n    development: {ssl: false, port: PORT, hostname: 'localhost'}\r\n}\r\n\r\nconst environment = process.env.NODE_ENV || 'production';\r\nconst config = configurations[environment];\r\n\r\n\r\nconst app = express();\r\napp.use(cors({\r\n    origin: webConfig.siteURL,\r\n    credentials: true\r\n}))\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(cookieParser());\r\napp.use('/', express.static('public'));\r\n\r\nconst getMe = async req => {\r\n    const token = req.cookies.token ? req.cookies.token : null;\r\n    if (token) {\r\n        try {\r\n            return await jwt.verify(token, process.env.JWT_SECRET);\r\n        } catch (e) {\r\n            throw new AuthenticationError('Session Expired...');\r\n        }\r\n    }\r\n}\r\n\r\nconst apollo = new ApolloServer({\r\n    typeDefs: schema,\r\n    resolvers,\r\n    formatError: error => {\r\n        const message = error.message\r\n            .replace('mogoose Validation Error: ', '')\r\n            .replace('Validation error', '')\r\n        return {\r\n            ...error,\r\n            message,\r\n        };\r\n    },\r\n    context: async ({ req, connection}) => {\r\n        if (connection) {\r\n            return {\r\n                models,\r\n            };\r\n        }\r\n\r\n        if (req) {\r\n            const me = await getMe(req);\r\n    \r\n            return {\r\n                models,\r\n                me,\r\n                secret: process.env.JWT_SECRET,\r\n            };\r\n        }\r\n    },\r\n});\r\napollo.applyMiddleware({ app, path: '/graphql'});\r\n\r\nvar server\r\n\r\nif (config.ssl) {\r\n    server = https.createServer(\r\n        {\r\n            key: fs.readFileSync(`./ssl/${environment}/server.key`),\r\n            cert: fs.readFileSync(`./ssl/${environment}/server.crt`)\r\n        },\r\n        app\r\n    )\r\n} else {\r\n    server = http.createServer(app)\r\n}\r\n\r\napollo.installSubscriptionHandlers(server);\r\n\r\nserver.listen({ port: config.port }, () => {\r\n    console.log(\r\n        '🚀 Server ready at',\r\n        `http${config.ssl ? 's' : ''}://${config.hostname}:${config.port}${apollo.graphqlPath}`\r\n      )\r\n})\r\n\r\n","\r\n\r\nconst models = {\r\n    User: import('./user'),\r\n    Post: import('./post'),\r\n}\r\n\r\nexport default models;","import mongoose from \"mongoose\";\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\nconst Post = new Schema({\r\n    title: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    desc: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    content: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    cotagory: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    img: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    date: {\r\n        type: Date,\r\n        default: Date.now\r\n    },\r\n    userId: {\r\n        type: Schema.Types.ObjectId,\r\n    },\r\n    user: {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'User'\r\n    }\r\n});\r\n\r\nexport default mongoose.model('Post', Post);","import mongoose from \"mongoose\";\r\nimport bcrypt from \"bcrypt\";\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\nconst User = new Schema({\r\n    username: {\r\n        type: String,\r\n        required: true,\r\n        unique: true\r\n    },\r\n    firstName: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    lastName: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    password: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    userImage: {\r\n        type: String,\r\n    },\r\n    bio: {\r\n        type: String,\r\n    },\r\n    role: {\r\n        type: String,\r\n    },\r\n    createdAt: {\r\n        type: Date,\r\n        default: Date.now\r\n    },\r\n    users: [{\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'Post'\r\n    }]\r\n});\r\n\r\nUser.pre('save', next => {\r\n    if(!this.isModified('password')) {\r\n        return next();\r\n    }\r\n\r\n    bcrypt.genSalt(10, (err, salt) =>{\r\n        if(err) return next(err);\r\n\r\n        bcrypt.hash(this.password, salt, (err, hash) => {\r\n            this.password = hash;\r\n\r\n            next();\r\n        })\r\n    })\r\n})\r\n\r\nconst userModel = mongoose.model('User', User);\r\nconst newUser = userModel.findOne({username: \"masoudey\"});\r\nconsole.log(newUser);\r\nexport default mongoose.model('User', User);\r\n","import { ForbiddenError } from \"apollo-server\";\r\nimport { combineResolvers, skip } from \"graphql-resolvers\";\r\n\r\nexport const isAuthenticated = (parent, args, { me }) =>\r\n    me ? skip : new ForbiddenError('Not authenticated');\r\n\r\nexport const isAdmin = combineResolvers(\r\n    isAuthenticated,\r\n    (parent, args, { me: { role } }) =>\r\n        role === 'ADMIN'\r\n            ? skip\r\n            : new ForbiddenError('Not authorized as admin'),\r\n);\r\n\r\nexport const isPostOwner = async (\r\n    parents,\r\n    { id },\r\n    {models, me },\r\n) => {\r\n    const post = await models.Post.findById(id, { lean: true });\r\n    if (post.userId !== me.id) {\r\n        throw new ForbiddenError('Not authenticated as owner');\r\n    }\r\n    return skip;\r\n};","import postResolvers from \"./post\";\r\nimport userResolvers from \"./user\";\r\n\r\nexport default [userResolvers, postResolvers]","import { combineResolvers } from \"graphql-resolvers\";\r\n\r\nimport { isAuthenticated, isPostOwner } from \"./authorization\";\r\n\r\nimport pubsub, { EVENTS } from \"../subscription\";\r\n\r\nconst toCursorHash = string => Buffer.from(string).toString('base64');\r\n\r\nconst fromCursorHash = string =>\r\n    Buffer.from(string, 'base64').toString('ascii');\r\n\r\nexport default {\r\n    Query: {\r\n        posts: async (parent, { cursor, limit = 50 }, { models }) => {\r\n            const cursorOptions = cursor\r\n                ? {createdAt: {$lte: fromCursorHash(cursor)}}\r\n                : {};\r\n            \r\n                const posts = await models.Post.find(\r\n                    cursorOptions,\r\n                    null,\r\n                    {sort: { createdAt: 'desc'}, limit: limit + 1}\r\n                );\r\n\r\n                const hasNextPage = posts.length > limit;\r\n                const edges = hasNextPage ? posts.slice(0, -1) : posts;\r\n\r\n                return {\r\n                    edges,\r\n                    pageInfo: {\r\n                        endCursor: toCursorHash(\r\n                            edges[edges.length - 1].createdAt.toString(),\r\n                        ),\r\n                    },\r\n                };\r\n        },\r\n        post: async (parent, { id }, { models }) => \r\n            await models.Post.findById(id),\r\n    },\r\n\r\n    Mutation: {\r\n        createPost: combineResolvers(\r\n            isAuthenticated,\r\n            async (parent, { title, desc, content, cotagory, img }, { models, me }) => {\r\n                const post = await new models.Post({\r\n                    title,\r\n                    desc,\r\n                    content,\r\n                    cotagory,\r\n                    img,\r\n                    userId: me.id,\r\n                }).save();\r\n\r\n                pubsub.publish(EVENTS.POST.CREATED, {\r\n                    postCreated: { post },\r\n                });\r\n\r\n                return post;\r\n            },\r\n        ),\r\n\r\n        deletePost: combineResolvers(\r\n            isAuthenticated,\r\n            isPostOwner,\r\n            async (parent, { id }, { models }) =>\r\n                await models.Post.findByIdAndDelete({ id }),\r\n        ),\r\n    },\r\n\r\n    Post: {\r\n        user: async (post, args, { models }) =>\r\n            await models.User.findById(post.userId),\r\n    },\r\n\r\n    Subscription: {\r\n        postCreated: {\r\n            subscribe: () => pubsub.asyncIterator(EVENTS.POST.CREATED),\r\n        },\r\n    },\r\n};","import jwt from \"jsonwebtoken\";\r\nimport generator from \"generate-password\";\r\nimport axios from \"axios\";\r\nimport { combineResolvers } from \"graphql-resolvers\";\r\nimport { AuthenticationError, UserInputError } from \"apollo-server\";\r\n\r\nimport webConfig from \"../../webConfig\";\r\nimport { isAuthenticated, isAdmin } from \"./authorization\";\r\n\r\nimport bcrypt from \"bcrypt\";\r\n\r\nconst createToken = async (user, secret, expiresIn) => {\r\n    const { id, email, username, role } = user;\r\n    return await jwt.sign({id, email, username, role }, secret, {expiresIn,});\r\n};\r\n\r\nconst generatePasswordHash = async function() {\r\n    const saltRound = 10;\r\n    return await bcrypt.hashSync(this.password, saltRound);    \r\n}\r\n\r\nconst validatePassword = async function(password) {\r\n    return await bcrypt.compare(password, this.password);\r\n}\r\n\r\nexport default {\r\n    Query: {\r\n        users: async (parent, args, { models }) =>\r\n            await models.User.find(),\r\n\r\n        user: async (parent, { id }, { models }) =>\r\n            await models.User.findById(id),\r\n\r\n        me: async (parent, args, { models, me }) => {\r\n            if (!me) {\r\n                return null;\r\n            }\r\n\r\n            return await models.User.findById(me.id)\r\n        },\r\n    },\r\n    Mutation: {\r\n        signUp: async (\r\n            parent,\r\n            { username, email, password, firstName, lastName, userImage },\r\n            { models, secret },\r\n        ) => {\r\n            console.log(\"models\", models.User);\r\n            const user = await models.User.findOne({ email });\r\n\r\n            if (user) {\r\n                throw new UserInputError('User Exist');\r\n            }\r\n\r\n            const newUser = await new models.User({\r\n                username,\r\n                email,\r\n                password,\r\n                firstName, \r\n                lastName,\r\n                userImage,\r\n            }).save();\r\n            return { token: createToken(newUser, secret, '30m')};\r\n        },\r\n\r\n        signIn: async (\r\n            parents,\r\n            { email, password },\r\n            { models, secret },\r\n        ) => {\r\n            const user = await models.User.findOne({ email });\r\n\r\n            if (!user) {\r\n                throw new UserInputError('User doesnt exist');\r\n            }\r\n\r\n            const isValidPass = await validatePassword(password)\r\n            if (!isValidPass) {\r\n                throw new AuthenticationError('Invalid password');\r\n            }\r\n\r\n            return {token: createToken(user, secret, '30m')}\r\n        },\r\n        updateUser: combineResolvers(\r\n            isAuthenticated,\r\n            async (parent, { email, username, firstName, lastName}, { models, me }) => {\r\n                const user = await models.User.findOneAndUpdate({ email }, { $set: {username, firstName, lastName}}, {new: true});\r\n\r\n                if (!user) {\r\n                    throw new UserInputError('User not found');\r\n                }\r\n\r\n                return user;\r\n            },\r\n        ),\r\n        deleteUser: combineResolvers(\r\n            isAdmin,\r\n            async (parent, { id }, { models }) =>\r\n                await models.User.findByIdAndDelete({id})\r\n        ),\r\n        setUserImage: async (parent, { email, userImage}, { models, me}) => {\r\n            const user = await models.User.findOneAndUpdate({ email }, {$set: { userImage }}, {new: true});\r\n\r\n            if (!user) {\r\n                throw new UserInputError('User not found');\r\n            }\r\n\r\n            return user;\r\n        },\r\n        changeEmail: async (parent, { currentEmail, newEmail }, { models }) => {\r\n            const user = await models.User.findOneAndUpdate({ email: currentEmail }, {$set: {email: newEmail}}, {new: true});\r\n\r\n            if(!user) {\r\n                throw new UserInputError('User not found');\r\n            }\r\n\r\n            return user;\r\n        },\r\n        changePassword: async (parent, { email, password }, { models }) => {\r\n            const hashPassword = await generatePasswordHash(password);\r\n            const user = await models.User.findOneAndUpdate({ email }, {$set: { password: hashPassword}}, {new: true});\r\n\r\n            if (!user) {\r\n                throw new UserInputError('User not found');\r\n            }\r\n\r\n            return user;\r\n        },\r\n        passwordReset: async (parent, { email }, { models }) => {\r\n            const generatedPassword = generator.generate({ length: 10, numbers: true});\r\n            const hashPassword = await generatePasswordHash(generatedPassword);\r\n            const user = await models.User.findOneAndUpdate({ email }, {$set: { password: hashPassword}}, {new: true});\r\n\r\n            if (!user) {\r\n                throw new UserInputError('User not found');\r\n            } else {\r\n                const data = {\r\n                    email,\r\n                    generatedPassword\r\n                }\r\n\r\n                axios.post(`${webConfig.siteURL}/password-reset`, data)\r\n                .then((response)=>{\r\n                    console.log('Email has sent!');\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n            }\r\n\r\n            return user;\r\n        }\r\n    },\r\n    User: {\r\n        posts: async (user, args, { models }) =>\r\n            await models.Post.find({ userId: user.id })\r\n    }\r\n}","import { PubSub } from \"apollo-server\";\r\n\r\nimport * as POST_EVENTS from \"./post\";\r\n\r\nexport const EVENTS = {\r\n    POST: POST_EVENTS,\r\n};\r\n\r\nexport default new PubSub();","export const CREATED = 'CREATED';","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link-http\");","module.exports = require(\"apollo-server\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"axios\");","module.exports = require(\"babel-polyfill\");","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"cors\");","module.exports = require(\"dataloader\");","module.exports = require(\"dotenv/config\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"generate-password\");","module.exports = require(\"graphql-resolvers\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-helmet\");","module.exports = require(\"react-router-dom\");"],"sourceRoot":""}